{
	"info": {
		"_postman_id": "a2f67ab9-8f01-440a-82ad-3850b289f636",
		"name": "NewManDemo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21044001"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "Create_Issue_With_Labels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"let number = body.number;\r",
									"console.log(\"BODY: \", body)\r",
									"pm.test(\"Check status code\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "JeniAndreeva",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"First Issue from Postman\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Issue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = pm.response.json();\r",
									"let number = body.number;\r",
									"console.log(\"BODY: \", body)\r",
									"pm.test(\"Check status code\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status\", function(){\r",
									"    pm.expect(pm.response.status).to.equal('Created');\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code\", () => {\r",
									"    pm.expect(pm.response.code, \"STATUS CODE\").to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check status code other way\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Check body Length\", function(){\r",
									"    console.log(body);\r",
									"});\r",
									"\r",
									"pm.test(\"Check body URL\", function(){\r",
									"    console.log(body.url);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue URL\", function() {\r",
									"    let url = \"https://api.github.com/repos/JeniAndreeva/Postman/issues/\"+ number;\r",
									"    pm.expect(body.url, \"URL property\").to.equal(url);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue Number\", function() {\r",
									"    pm.expect(body.number, \"Number property\").to.be.greaterThan(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check issue id\", function() {\r",
									"    pm.expect(body.id, \"id property\").to.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "JeniAndreeva",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"First Issue from Postman\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "Get_Objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"HTTP retursn an array of objects with ids\", function(){\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(Array.isArray(body)).equal(true);\r",
									"    for (let item of body) {\r",
									"        pm.expect(typeof(item).equals(\"object\"));\r",
									"        pm.expect(typeof(item.id)).equals(\"number\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\": \"First Issue from Postman\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/{{user}}/{{repo}}/issues",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"{{user}}",
								"{{repo}}",
								"issues"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}